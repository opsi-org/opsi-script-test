[actions]

;setDebug_prog=true
FatalOnSyntaxError = false
ImportLib "uib_strlistutils"

DefVar $service$ = "https://bonifax.uib.local:4447/rpc"
DefVar $UserFQDN$ ; define before execution!
DefVar $opsiHostKey$ ; define before execution!

DefStringList $ConstTestList$
DefStringList $CompValueList$
DefVar $TestResult$

DefFunc TestBooleanInOpsiServiceCall():void
markErrorNumber	
Set $ConstTestList$=getReturnListFromSection('opsiServiceCall_getServiceTime_TestBoolean /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$')
Set $CompValueList$=getReturnListFromSection('opsiServiceCall_getServiceTime_Compare /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$')
Set $ConstTestList$=splitStringOnWhiteSpace(takeString(0,$ConstTestList$))
Set $CompValueList$=splitStringOnWhiteSpace(takeString(0,$CompValueList$))
if errorsOccuredSinceMark > 0
	set $TestResult$ = "not o.k."
	LogWarning "Boolean value in params failed in OpsiServiceCall 'getServiceTime'!"
else
	if takeString(0,$ConstTestList$) = takeString(0,$CompValueList$)
		comment "Boolean value in params passed OpsiServiceCall 'getServiceTime'"
	else
		set $TestResult$ = "not o.k."
		LogWarning "Boolean value in params passed OpsiServiceCall 'getServiceTime' but gives a different date!"
	endif	
endif
[opsiServiceCall_getServiceTime_TestBoolean]
"method": "getServiceTime"
"params": [
false
]
[opsiServiceCall_getServiceTime_Compare]
"method": "getServiceTime"
"params": [
"false"
]
endfunc

DefFunc TestNumericInOpsiServiceCall():void
markErrorNumber
Set $ConstTestList$=getReturnListFromSection('opsiServiceCall_log_read_TestNumeric /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$')
Set $CompValueList$=getReturnListFromSection('opsiServiceCall_log_read_Compare /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$')
if errorsOccuredSinceMark > 0
	set $TestResult$ = "not o.k."
	LogWarning "Numeric value in params failed in OpsiServiceCall 'log_read'!"
else
	if stringToBool(compareLists($ConstTestList$,$CompValueList$))
		comment "Numeric value in params passed OpsiServiceCall 'log_read'"
		
	else
		set $TestResult$ = "not o.k."
		LogWarning "Numeric value in params passed OpsiServiceCall 'log_read' but gives a different result!"
	endif
endif
[opsiServiceCall_log_read_TestNumeric]
"method": "log_read"
"params": [
"instlog",
"$UserFQDN$",
1000
]
[opsiServiceCall_log_read_Compare]
"method": "log_read"
"params": [
"instlog",
"$UserFQDN$",
"1000"
]
endfunc

DefFunc TestArrayInOpsiServiceCall($type$:string, $SectionTestEntry$:string, $SectionCompareEntry$:string):void
markErrorNumber
opsiServiceCall_setProductProperty_TestArray /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$
Set $ConstTestList$=getReturnListFromSection('opsiServiceCall_getProductProperty /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$')
opsiServiceCall_setProductProperty_Compare /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$
Set $CompValueList$=getReturnListFromSection('opsiServiceCall_getProductProperty /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$')
if errorsOccuredSinceMark > 0
	set $TestResult$ = "not o.k."
	LogWarning "Array with " + $type$ + " values in params failed in OpsiServiceCall 'setProductProperty'!"
else
	if stringToBool(compareLists($ConstTestList$,$CompValueList$))
		comment "Array with " + $type$ + " values in params passed OpsiServiceCall 'setProductProperty'"
		opsiServiceCall_deleteProductPropertyChanges /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$
	else
		set $TestResult$ = "not o.k."
		LogWarning "Array with " + $type$ + " values in params passed OpsiServiceCall 'setProductProperty' but gives a different result!"
		opsiServiceCall_deleteProductPropertyChanges /serviceurl $service$ /username $UserFQDN$ /password $opsiHostKey$
	endif
endif
[opsiServiceCall_setProductProperty_TestArray]
"method": "setProductProperty"
"params": [
"opsi-script-test",
"dummymulti",
"$SectionTestEntry$",
"$UserFQDN$"
]
[opsiServiceCall_setProductProperty_Compare]
"method": "setProductProperty"
"params": [
"opsi-script-test",
"dummymulti",
"$SectionCompareEntry$",
"$UserFQDN$"
]
[opsiServiceCall_getProductProperty]
"method": "productPropertyState_getObjects"
"params": [
"[]",
'{"objectId":"$UserFQDN$","productId":"opsi-script-test","propertyId":"dummymulti"}'
]
[opsiServiceCall_deleteProductPropertyChanges]
"method": "productPropertyState_delete"
"params": [
"opsi-script-test",
"dummymulti",
"$UserFQDN$"
]
endfunc


TestBooleanInOpsiServiceCall()
TestNumericInOpsiServiceCall()
TestArrayInOpsiServiceCall("numeric","[0,15,6.789]","['0','15','6.789']")
TestArrayInOpsiServiceCall("boolean","[true,false]","['True','False']")


[stop]