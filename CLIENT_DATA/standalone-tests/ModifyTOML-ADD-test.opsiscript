encoding=utf8

[Actions]
Message "Testing of TOML functions"
SetLogLevel=7

DefVar $HomeTestFiles$
DefVar $TOMLFile$
DefVar $newTOMLFile$
DefVar $newJSONFile$
DefVar $TestResult$
DefVar $CompValue$

DefStringList $TOMLlist$
DefVar $TOMLString$
DefVar $TOMLFileList$
DefVar $TOMLdata$
DefStringList $TestList$
DefVar $TestString$

Set $HomeTestFiles$ = "/home/jinene/gitwork/opsi-script-test/CLIENT_DATA/test-files/TOML/"
Set $TOMLFile$ = $HomeTestFiles$ + "TOMLfile.toml"
Set $TOMLFileList$ = $HomeTestFiles$ + "TOMLStringList.txt"
Set $newTOMLFile$ = $HomeTestFiles$ + "TOMLempty.toml"
Set $newJSONFile$ = $HomeTestFiles$ + "myJSONfromTOMLdata.json"

comment "-----  Testing LoadTOMLFile :"
Message "-- LoadTOMLFile TOMLfile.toml "
Set $TOMLlist$ = LoadTOMLFile($TOMLFile$)
Set $TestList$ = loadTextFile($TOMLFile$)
set $CompValue$ = booltostring(areListsEqual($TOMLlist$, $TestList$,"FLAG_AUTO_CS"))
if $CompValue$ = "true"
		comment "Testing LoadTOMLFile TOMLfile.toml succeeded"
else
		set $TestResult$ = "not o.k."
		LogWarning "Testing LoadTOMLFile TOMLfile.toml failed"
endif


comment "-----  Testing GetTOMLAsStringList :"
Message "-- GetTOMLAsStringList TOMLfile.toml "
Set $TOMLString$ = ReadTOMLFile($TOMLFile$)
Set $TOMLlist$ = GetTOMLAsStringList($TOMLString$)
Set $TestList$ = loadTextFile($TOMLFileList$)
set $CompValue$ = booltostring(areListsEqual($TOMLlist$, $TestList$,"FLAG_AUTO_CS"))
if $CompValue$ = "true"
		comment "Testing GetTOMLAsStringList TOMLfile.toml succeeded"
else
		set $TestResult$ = "not o.k."
		LogWarning "Testing GetTOMLAsStringList TOMLfile.toml failed"
endif



comment "-----  Testing ModifyTOML :"
Message "-- ModifyTOML TOMLfile.toml :"
Set $TOMLString$ = ReadTOMLFile($TOMLFile$)
DefFunc myModifyTOMLTester( $command$ : string, $keyPath$ : string, $value$ : string) : void
    DefVar $CompValue$
    Set $TOMLString$ = ModifyTOML($TOMLString$,$command$,$keyPath$,$value$)
    Set $TestString$ = GetValueFromTOML($TOMLString$,$keyPath$,"defaultValue")
    if $command$ = 'DEL' 
    	set $CompValue$ = booltostring($TestString$ = "defaultValue")
    else
    	set $CompValue$ = booltostring($TestString$ = $value$)
    endif
	if $CompValue$ = 'true'
		comment "Testing ModifyTOML TOMLfile.toml succeeded"
	else
		set $TestResult$ = "not o.k."
		LogWarning "Testing ModifyTOML TOMLfile.toml failed"
	endif
endfunc

message '- Testing ModifyTOML with "ADD" empty key in root Table :'
myModifyTOMLTester('ADD','   ', 'defaultValue')

message '- Testing ModifyTOML with "ADD" existing key in root Table :'
Set $TOMLString$ = ModifyTOML($TOMLString$,'ADD','title', '"newADDvalueInRootTable"')
Set $TestString$ = GetValueFromTOML($TOMLString$,'title',"defaultValue")
if $TestString$ = '"TOML Example"'
	comment "Testing ModifyTOML TOMLfile.toml succeeded"
else
	set $TestResult$ = "not o.k."
	LogWarning "Testing ModifyTOML TOMLfile.toml failed"
endif

message '- Testing ModifyTOML with "ADD" new key in root Table :'
myModifyTOMLTester('ADD','newADDkeyInRootTable', '"newADDvalueInRootTable"')
message '- Testing ModifyTOML with "ADD" new key in sub-Table :'
myModifyTOMLTester('ADD','servers.newADDkeyInServers', '"newADDvalueInServers"')
message '- Testing ModifyTOML with "ADD" new key in new sub-Table :'
myModifyTOMLTester('ADD','servers.alpha.a.newADDkeyInAlphaA', '"newADDvalueInAlphaA"')
message '- Testing ModifyTOML with "ADD" new key in new Table :'
myModifyTOMLTester('ADD','newTable.newADDtableKey', '"newADDtableValue"')
message 'Testing ModifyTOML with "ADD" a String Value :'
myModifyTOMLTester('ADD','newTable.newStringKey', '"newStringValue"')
message 'Testing ModifyTOML with "ADD" an Integer Value :'
myModifyTOMLTester('ADD','newTable.newIntegerKey', '1')
message 'Testing ModifyTOML with "ADD" a Float Value :'
myModifyTOMLTester('ADD','newTable.newFloatKey', '10.1')
message 'Testing ModifyTOML with "ADD" a Date Value :'
myModifyTOMLTester('ADD','newTable.newDateKey', '2022-02-02T16:16:00Z-16:16')
message 'Testing ModifyTOML with "ADD" an Array Value :'
myModifyTOMLTester('ADD','newTable.newArray', '[ "a", "b", "c" ]')


Message "-----  Testing SaveToTOMLFile "
comment "-- SaveToTOMLFile TOMLempty.toml "
set $TestString$ = booltostring(SaveToTOMLFile($TOMLString$,$newTOMLFile$))
if $TestString$ = "true"
		comment "Testing SaveToTOMLFile succeeded"
else
		set $TestResult$ = "not o.k."
		LogWarning "Testing SaveToTOMLFile failed"
endif


Message "-----  Testing ConvertTOMLfileToJSONfile "
comment "-- ConvertTOMLfileToJSONfile myJSONfromTOMLdata.json "
set $TestString$ = booltostring(ConvertTOMLfileToJSONfile($newTOMLFile$,$newJSONFile$))
if $TestString$ = "true"
		comment "Testing ConvertTOMLfileToJSONfile succeeded"
else
		set $TestResult$ = "not o.k."
		LogWarning "Testing ConvertTOMLfileToJSONfile failed"
endif
