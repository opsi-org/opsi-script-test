encoding=utf8

if ($Flag_subregex$ = "on") or ($MasterFlag$ = "on")
	Message "testing regex functions"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing regex functions"
	comment ""
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	Set $ExpectedResult$ = "o.k."
	; start testing
	set $TestResult$ = "o.k."
	set $TestName$ = "regex"
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "isRegexMatch"
	
	comment "Testing with matching string"
	
	set $ConstTest$ = "true"
	set $CompValue$ = booltostring(isRegexMatch('abc efg', '.*abc.*'))
	if ($ConstTest$ = $CompValue$)
		comment "isRegexMatch passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isRegexMatch failed"
	endif
	
	comment "Testing with non matching string"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isRegexMatch('abc efg', '.*xyz.*'))
	if ($ConstTest$ = $CompValue$)
		comment "isRegexMatch passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isRegexMatch failed"
	endif
	
	comment "Testing with empty string"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isRegexMatch('', '.*abc.*'))
	if ($ConstTest$ = $CompValue$)
		comment "isRegexMatch passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isRegexMatch failed"
	endif
	
	comment "Testing with empty expression"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isRegexMatch('abc efg', ''))
	if ($ConstTest$ = $CompValue$)
		comment "isRegexMatch passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isRegexMatch failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "getSubListByContainingRegex"
	
	comment "Searching with a single expression"
	
	set $string1$ = "\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}"
	set $list1$ = createStringList('uib gmbh','example@xyz.com and example2@xyz.com', 'client')
	set $ConstTest$ = "example@xyz.com and example2@xyz.com"
	
	set $list2$ = getSubListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "case sensitive"
	set $string1$ = "\.pkg$"
	set $list1$ = createStringList('hello.pkg','heLLo.pKg', 'hEl Lo.PKG', 'hello pkg','hello.pkg.none')
	set $ConstTest$ = "hello.pkg"
	
	set $list2$ = getSubListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "not case sensitive"
	set $string1$ = "\.[pP][kK][gG]$"
	set $list1$ = createStringList('hello.pkg','heLLo.pKg', 'hEl Lo.PKG', 'hello pkg','hello.pkg.none')
	set $ConstTest$ = "hello.pkg | heLLo.pKg | hEl Lo.PKG"
	
	set $list2$ = getSubListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "not case sensitive"
	set $string1$ = "(?i)\.pkg$"
	set $list1$ = createStringList('hello.pkg','heLLo.pKg', 'hEl Lo.PKG', 'hello pkg','hello.pkg.none')
	set $ConstTest$ = "hello.pkg | heLLo.pKg | hEl Lo.PKG"
	
	set $list2$ = getSubListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "empty strings"
	set $string1$ = "(?i)\.pkg$"
	set $list1$ = createStringList('','heLLo.pKg', 'hEl Lo.PKG', 'hello pkg','hello.pkg.none')
	set $ConstTest$ = "heLLo.pKg | hEl Lo.PKG"
	
	set $list2$ = getSubListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "empty expression"
	set $string1$ = ""
	set $list1$ = createStringList('hello.pkg','heLLo.pKg', 'hEl Lo.PKG', 'hello pkg','hello.pkg.none')
	set $ConstTest$ = ""
	
	set $list2$ = getSubListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "Searching with a list of expressions"
	
	set $list1$ = createStringList('uib gmbh','example@xyz.com and example2@xyz.com', 'client')
	set $list3$ = createStringList('\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}','.*uib')
	set $ConstTest$ = "uib gmbh | example@xyz.com and example2@xyz.com"
	
	set $list2$ = getSubListByContainingRegex($list3$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	comment "Searching with a list of expressions with empty strings"
	
	set $list1$ = createStringList('uib gmbh','','','example@xyz.com and example2@xyz.com', 'client')
	set $list3$ = createStringList('','\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}','','.*uib')
	set $ConstTest$ = "uib gmbh | example@xyz.com and example2@xyz.com"
	
	set $list2$ = getSubListByContainingRegex($list3$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getSubListByContainingRegex failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "getRegexMatchList"
	
	comment "Searching with a single expression"
	
	set $string1$ = "\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}"
	set $list1$ = createStringList('uib gmbh','client','example@xyz.com and example2@xyz.com')
	set $ConstTest$ = "example@xyz.com | example2@xyz.com"
	
	set $list2$ = getRegexMatchList($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getRegexMatchList passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getRegexMatchList failed"
	endif
	
	comment "Searching with a single expression and empty input"
	
	set $string1$ = "\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}"
	set $list1$ = createStringList('','uib gmbh','','client','example@xyz.com and example2@xyz.com')
	set $ConstTest$ = "example@xyz.com | example2@xyz.com"
	
	set $list2$ = getRegexMatchList($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getRegexMatchList passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getRegexMatchList failed"
	endif
	
	comment "Searching with a list of expressions"
	
	set $list3$ = createStringList('\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}','.*uib')
	set $ConstTest$ = "uib | example@xyz.com | example2@xyz.com"
	
	set $list2$ = getRegexMatchList($list3$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getRegexMatchList passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getRegexMatchList failed"
	endif
	
	set $string1$ = "(?i)^.*\.pkg$"
	set $list1$ = createStringList('hello.pkg','heLLo.pKg', 'hEl Lo.PKG', 'hello pkg','hello.pkg.none','hello.world.pkg','hello.pkg.world')
	set $ConstTest$ = "hello.pkg | heLLo.pKg | hEl Lo.PKG | hello.world.pkg"
	
	set $list2$ = getRegexMatchList($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getSubListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getRegexMatchList failed"
	endif
	
	comment "Searching with a list of expressions with empty expr"
	
	set $list1$ = createStringList('','uib gmbh','','client','example@xyz.com and example2@xyz.com')
	set $list3$ = createStringList('','\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}','','.*uib')
	set $ConstTest$ = "uib | example@xyz.com | example2@xyz.com"
	
	set $list2$ = getRegexMatchList($list3$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "getRegexMatchList passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getRegexMatchList failed"
	endif
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "removeFromListByContainingRegex"
	
	comment "Searching with a empty expression"
	
	set $string1$ = ""
	set $list1$ = createStringList('uib gmbh','client','example@xyz.com and example2@xyz.com')
	set $ConstTest$ = ""
	
	set $list2$ = removeFromListByContainingRegex($string1$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "removeFromListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing removeFromListByContainingRegex failed"
	endif
	
	comment "Searching with a list of expressions"
	
	set $list3$ = createStringList('\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}','.*uib')
	set $ConstTest$ = "client"
	
	set $list2$ = removeFromListByContainingRegex($list3$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "removeFromListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing removeFromListByContainingRegex failed"
	endif
	
	comment "Searching with a list of expressions and empty input"
	
	set $list1$ = createStringList('','uib gmbh','client','','example@xyz.com and example2@xyz.com','')
	set $list3$ = createStringList('\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}','.*uib')
	set $ConstTest$ = "client"
	
	set $list2$ = removeFromListByContainingRegex($list3$, $list1$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "removeFromListByContainingRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing removeFromListByContainingRegex failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "stringReplaceRegex"
	
	comment "Testing with a matching expression"
	
	set $ConstTest$ = "xyz abc gmbh"
	set $CompValue$ = stringReplaceRegex('uib gmbh','.*uib', 'xyz abc')
	if ($ConstTest$ = $CompValue$)
		comment "stringReplaceRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing stringReplaceRegex failed"
	endif
	
	comment "Testing with a non matching expression"
	
	set $ConstTest$ = "uib gmbh"
	set $CompValue$ = stringReplaceRegex('uib gmbh','.*abc', 'xyz abc')
	if ($ConstTest$ = $CompValue$)
		comment "stringReplaceRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing stringReplaceRegex failed"
	endif
	
	comment "Testing with a matching expression and empty replacement"
	
	set $ConstTest$ = " gmbh"
	set $CompValue$ = stringReplaceRegex('uib gmbh','.*uib', '')
	if ($ConstTest$ = $CompValue$)
		comment "stringReplaceRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing stringReplaceRegex failed"
	endif
	
	comment "Replacing with empty expr"
	
	set $ConstTest$ = "uib gmbh"
	set $CompValue$ = stringReplaceRegex('uib gmbh','', 'xyz abc')
	if ($ConstTest$ = $CompValue$)
		comment "stringReplaceRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing stringReplaceRegex failed"
	endif
	
	comment "Testing with empty input string"
	
	set $ConstTest$ = ""
	set $CompValue$ = stringReplaceRegex('','.*uib', 'xyz abc')
	if ($ConstTest$ = $CompValue$)
		comment "stringReplaceRegex passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing stringReplaceRegex failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "stringReplaceRegexInList"
	
	set $string1$ = "\w+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,6}"
	set $string2$ = "MATCH REMOVED"
	set $list1$ = createStringList('','uib gmbh','','client','example@xyz.com and example2@xyz.com','')
	set $ConstTest$ = ' | uib gmbh |  | client | MATCH REMOVED and MATCH REMOVED | '
	
	set $list2$ = stringReplaceRegexInList($list1$, $string1$, $string2$)
	
	set $CompValue$ = composeString ($list2$, " | ")
	if ($ConstTest$ = $CompValue$)
		comment "stringReplaceRegexInList passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing stringReplaceRegexInList failed"
	endif
	
	
	sub_compareResult
	set $winst_regex$ = $SubResult$
	
endif



