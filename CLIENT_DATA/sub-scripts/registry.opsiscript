encoding=utf8

if ($Flag_subregistry$ = "on") or ($MasterFlag$ = "on")
	
	deffunc doHKEYAccessTest():void
	
	DefVar $Administrator_SID$
	DefVar $escUserProfile$
	Set $Administrator_SID$ = GetUserSID("Administrator")
	Set $escUserProfile$ = "%" + "USERPROFILE" + "%" 
	defvar $keypath$ = "HKEY_LOCAL_MACHINE\HÃ¤ger+Busch"
	Registry_local_admin_folders /SysNative

	[Registry_local_admin_folders]
	openkey [$keypath$]
	set "Desktop" = REG_EXPAND_SZ:"$escUserProfile$\Desktop" 
	set "Personal" = REG_EXPAND_SZ:"$escUserProfile$\My Documents"
	deletekey [$keyPath$]
	endfunc
	
	doHKEYAccessTest()
	
	
	if $OS$ = "windows_NT"
	
	Message "testing registry functions"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing registry functions"
	comment ""
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	Set $ExpectedResult$ = "o.k."

	set $TestResult$ = "o.k."
		; 6.3.7 Reading Values from the Windows Registry and Transforming Values into Registry Format
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "RegString"
		set $ConstTest$ = "c:\\windows\\system\\"
		set $CompValue$ = RegString ("c:\windows\system\")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
  		include_insert "%scriptpath%\sub-scripts\registryFunctions\GetRegistry\GetRegistryStringValue.opsiscript"
  		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\GetRegistry\GetRegistryValue.opsiscript"

		include_insert "%scriptpath%\sub-scripts\registryFunctions\create_delete_keys.opsiscript"
 	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "Add"
		Registry_opsi_org_delete_test
		Registry_Add
		set $ConstTest$ = "value"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "Supp"
		Registry_Supp
		set $ConstTest$ = "value;value1;value2;value3"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "Supp (again)"
		Registry_Supp
		set $ConstTest$ = "value;value1;value2;value3"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "Supp (again1)"
		Registry_Supp1
		set $ConstTest$ = "value;value1;value2;value3"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "Add (again)"
		Registry_Add
		set $ConstTest$ = "value;value1;value2;value3"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "SaveValueToFile"
		Files_testFiles
		Registry_SaveValueToFile
		if (FileExists($HomeTestFiles$+"\SaveValueToFile.txt"))
			set $ConstTest$ = "value;value1;value2;value3"
			set $list1$ = loadTextFile($HomeTestFiles$+"\SaveValueToFile.txt")
			Set $CompValue$ = takeString(0, $list1$)
			if ($ConstTest$ = $CompValue$)
				comment "passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "failed"
			endif
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "Supp (again2)"
		Registry_set4supp
		set $ConstTest$ = "C:\Program Files\CyberSafe\bin;C:\Program Files (x86)\CyberSafe\bin;C:\Oracle\product\11.2.0\client_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Gupta Framework;C:\PGIM\PlantConnect.BIN\System;C:\PGIM\PlantConnect.BIN\Signalexplorer;C:\PGIM\PlantConnect.BIN\Events\Client;C:\Program Files (x86)\Enterprise Vault\EVClient"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		Registry_Supp2
		set $ConstTest$ = "C:\Program Files\CyberSafe\bin;C:\Program Files (x86)\CyberSafe\bin;C:\Oracle\product\11.2.0\client_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Gupta Framework;C:\PGIM\PlantConnect.BIN\System;C:\PGIM\PlantConnect.BIN\Signalexplorer;C:\PGIM\PlantConnect.BIN\Events\Client;C:\Program Files (x86)\Enterprise Vault\EVClient;C:\Program Files (x86)\Java\jre8\bin"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		Registry_Supp2
		set $ConstTest$ = "C:\Program Files\CyberSafe\bin;C:\Program Files (x86)\CyberSafe\bin;C:\Oracle\product\11.2.0\client_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Gupta Framework;C:\PGIM\PlantConnect.BIN\System;C:\PGIM\PlantConnect.BIN\Signalexplorer;C:\PGIM\PlantConnect.BIN\Events\Client;C:\Program Files (x86)\Enterprise Vault\EVClient;C:\Program Files (x86)\Java\jre8\bin"
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		set $systemroot$ = '%'+'systemroot%'
		Registry_set4supp3
		set $ConstTest$ = '%'+'systemroot%'+';%'+'systemroot%\system32'
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		Registry_Supp3
		set $ConstTest$ = '%'+'systemroot%'+';%'+'systemroot%\system32'+';%'+'systemroot%\system32\wbem'
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
  	
		if not (FileExists($HomeTestFiles$))
			Files_testFiles
		endif
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "GetMultiSZFromFile"
		Registry_GetMultiSZFromFile
		set $ConstTest$ = "hello;world;how;are;you"
		set $CompValue$ = Trim(GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test2"))
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "DeleteVar"
		Registry_DeleteVar
		set $ConstTest$ = ""
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\Write_Read_64Bit_Registry.opsiscript"
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\AllUserDats.opsiscript"  	

		include_insert "%scriptpath%\sub-scripts\registryFunctions\GetRegistry\KeyList_VarList_VarMap.opsiscript"

		include_insert "%scriptpath%\sub-scripts\registryFunctions\keys_with_brackets.opsiscript"		
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\RegKeyExists_RegVarExists.opsiscript"
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\ACCESS_DENIED.opsiscript"
				
		Registry_opsi_org_delete_test
		Registry_opsi_org_delete_test /64bit
		Files_delete_SaveValueToFile_txt
	else ; windows
		set $TestResult$ = "not implemented"
	endif  ; windows 
	
	sub_compareResult

	set $subregistry$ = $SubResult$
endif

;----------------   start   sections for registry test ---------------------------------

[sub_retrieve_registry_data]
if $INST_SystemType$ = "64 Bit System"
	if CompareDotSeparatedNumbers("%OpsiscriptVersion%",">=","4.12.4")
		set $INST_ResultList$ = getOutStreamFromSection("execWith_reg_query '%System%\cmd.exe' /C winst /64bit")
	else
		set $INST_ResultList$ = getOutStreamFromSection("execWith_reg_query '%SystemRoot%\cmd64.exe' /C")
	endif
	for $s$ in $INST_ResultList$ do sub_fetch_SearchResult
else
	set $INST_SearchResult$ = GetRegistryStringValue("["+$INST_SearchKey$+"] "+$INST_SearchValue$)
endif

[execWith_reg_query]
@echo off
reg query "$INST_SearchKey$" /v "$INST_SearchValue$"

[sub_fetch_SearchResult]
set $INST_ResultList2$ = splitStringOnWhiteSpace("$s$")
if $INST_SearchValue$ = takeString(1,$INST_ResultList2$)
	if not (takeString(3,$INST_ResultList2$) = "")
		set $INST_ResultList3$ = getSublist(3:, $INST_ResultList2$)
		set $INST_SearchResult$ = composeString($INST_ResultList3$," ")
	else
		set $INST_SearchResult$ = ""
	endif
endif

[Registry_createkeys]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
set "var1" = "value1"
set "var2" = "value2"
set "var3" = "value3"
set "var4" = "value4"
set "var5" = REG_SZ:"value5"
set "var6" = REG_EXPAND_SZ:"value6"
set "var7" = REG_DWORD:777
set "var8" = REG_BINARY:08 08 08 0F 10
set "var9" = REG_MULTI_SZ:"value9|value10|de"
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\.a\b]
set ""="C:\Program files\test\test.exe -a"
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\key1]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\key2]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\key3]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\key4]

[Registry_deleteKey]
deletekey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\.a]

[Registry_deleteKey_winst_test]
deletekey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\winst-test]

[Registry_Add]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
Add "test"=REG_EXPAND_SZ:"value"

[Registry_Supp]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
supp "test" ; "value1;value2;value3;"

[Registry_Supp1]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
supp "test" ; "value2"

[Registry_set4supp]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
set "test"=REG_EXPAND_SZ:"C:\Program Files\CyberSafe\bin;C:\Program Files (x86)\CyberSafe\bin;C:\Oracle\product\11.2.0\client_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Gupta Framework;C:\PGIM\PlantConnect.BIN\System;C:\PGIM\PlantConnect.BIN\Signalexplorer;C:\PGIM\PlantConnect.BIN\Events\Client;C:\Program Files (x86)\Enterprise Vault\EVClient"

[Registry_Supp2]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
supp "test" ; "C:\Program Files (x86)\Java\jre8\bin"

[Registry_set4supp3]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
set "test"=REG_EXPAND_SZ:"$systemroot$;$systemroot$\system32"


[Registry_Supp3]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
supp "test" ; "$systemroot$\System32\Wbem"


[Registry_GetMultiSZFromFile]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
GetMultiSZFromFile "test2" "%ScriptPath%\test-files\reg_multisz_text.txt"

[Registry_SaveValueToFile]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
SaveValueToFile "test" "$HomeTestFiles$\SaveValueToFile.txt"

[Registry_DeleteVar]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]
DeleteVar "test"
DeleteVar "test2"

[Files_delete_SaveValueToFile_txt]
Delete -f "$HomeTestFiles$\SaveValueToFile.txt"

[Registry_opsi_org_test]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\test-4.0]
set ""="standard entry"
set "bitByWinst"="$regWriteValue$"
set "str_bywinst"=REG_SZ:"my string"
set "str_bywinst_with_%"="string with no percent char set without explicit data type will be written as string"
set "str_bywinst_with_%"="string with % set without explicit data type and will so be changed to expand_string"
set "str_bywinst_with_%"=REG_SZ:"string with % set with explicit data type string "
set "strexpand_bywinst"=REG_EXPAND_SZ:"%programfiles%"
set "dword_test1"= REG_DWORD:10
set "dword_test2"= REG_DWORD:0xA
set "dword_test3"= REG_DWORD:0x0A
set "dword_test4"= REG_DWORD:$0A
set "binary_bywinst"=REG_BINARY:00 FF
set "binary_empty_bywinst"=REG_BINARY:
set "multi_sz_bywinst" = REG_MULTI_SZ:"A|BC|de"

[Registry_set_quoted_string]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\quoted]
set "quoted"="$tmp$"

[Registry_createkeys_with_brackets]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\[brackets]]
set "entry1"="myentry1"

[Registry_deletekeys_with_brackets]
deletekey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\[brackets]]

[Registry_opsi_org_delete_test]
deletekey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test]


[ExecWith_opsi_org_test]
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\test-4.0" /v "bitByReg" /t REG_SZ /d "$regWriteValue$" /f

[Registry_hkcu_opsi_org_test]
openkey [SOFTWARE\opsi.org\opsi-winst-test]
set "bitByWinst"="$regWriteValue$"

[Registry_hkcu_opsi_org_deletekey]
openkey [SOFTWARE\opsi.org\opsi-winst-test\deleteme]
deletekey [SOFTWARE\opsi.org\opsi-winst-test\deleteme]

[Registry_hkcu_complete_opsi_org_test]
openkey [HKEY_CURRENT_USER\SOFTWARE\opsi.org\opsi-winst-test]
set "bitByWinst"="$regWriteValue$"
openkey [HKEY_CURRENT_USER\SOFTWARE\opsi.org\opsi-winst-test\.a\b]
set "bitByWinst"="$regWriteValue$"
openkey [HKEY_CURRENT_USER\SOFTWARE\opsi.org\opsi-winst-test\.a\b\c]
set "bitByWinst"="$regWriteValue$"


[Registry_hkcu_complete_opsi_org_deletekey]
openkey [HKEY_CURRENT_USER\SOFTWARE\opsi.org\opsi-winst-test\deleteme]
deletekey [HKEY_CURRENT_USER\SOFTWARE\opsi.org\opsi-winst-test\deleteme]

[DosInAnIcon_export_hkcu_complete_opsi_org_test]
@echo off
regedit /e "$HomeTestFiles$\hkcu_complete_opsi_org_test.reg" HKEY_CURRENT_USER\SOFTWARE\opsi.org\opsi-winst-test

[Registry_hkcu_userclasses_create_test]
openkey [HKEY_CURRENT_USER\Software\Classes\opsi-winst-test\.a\b]
set "bitByWinst"="$regWriteValue$"

[Registry_hkcu_userclasses_delete_test]
deletekey [HKEY_CURRENT_USER\Software\Classes\opsi-winst-test]

[Registry_hkcu_userclasses_createkey]
openkey [HKEY_CURRENT_USER\Software\Classes\opsi-winst-test]
set "bitByWinst"="$regWriteValue$"

[Registry_hkcu_userclasses_deletekey]
deletekey [HKEY_CURRENT_USER\Software\Classes\opsi-winst-test\.a]


[Registry_hack_forbidden_key]
openkey [HKLM\SYSTEM\ControlSet001\Control\Network\NetworkLocationWizard]
set "HideWizard" = REG_DWORD:0x1
DeleteVar "HideWizard"

[winbatch_hack_forbidden_key1]
reg add "HKLM\SYSTEM\ControlSet001\Control\Network\NetworkLocationWizard" /v "HideWizard" /t REG_DWORD /d "1" /f

[winbatch_hack_forbidden_key2]
reg delete "HKLM\SYSTEM\ControlSet001\Control\Network\NetworkLocationWizard" /v "HideWizard" /f

[Registry_multiline]
openkey [HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test\.a\b]
set ""="part1\npart2\npart3"
;set "test" = "$string1$"

[Registry_add_environment]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]
set "opsi-script-test"="deleteme"

[Registry_del_environment]
openkey [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]
DeleteVar "opsi-script-test"

[sub_check_environment]
comment "This will not work because the environment is inherited from the running process"
set $list$ = shellCall('set opsi-script-test')
set $CompValue$ = takeFirstStringContaining($list$, "deleteme")
if "" = $CompValue$
	comment "This will work because this new started process will get a new environment"
	winbatch_check_environment /RunElevated
	if ("42" = getlastExitCode)
		set $CompValue$ = "opsi-script-test=deleteme"
	else
		message "Set Environment Variables and wait for update "+calculate("%index% * 10")+" seconds ..."
		sleepseconds 10
	endif
endif

[winbatch_check_environment]
"%system%\cmd.exe" /c "if %opsi-script-test%==deleteme exit 42"


;----------------   end   sections for registry test ---------------------------------

