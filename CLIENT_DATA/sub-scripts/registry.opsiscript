encoding=utf8

if ($Flag_subregistry$ = "on") or ($MasterFlag$ = "on")

	if $OS$ = "windows_NT"
	
	Message "testing registry functions"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing registry functions"
	comment ""
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"	
	
	deffunc doHKEYAccessTest():void
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "No new keys allowed directly under HKLM (Error should occur in the following!)"
		
		DefVar $Administrator_SID$
		DefVar $escUserProfile$
		Set $Administrator_SID$ = GetUserSID("Administrator")
		Set $escUserProfile$ = "%" + "USERPROFILE" + "%" 
		defvar $keypath$ = "HKEY_LOCAL_MACHINE\Testkey"
		Registry_local_admin_folders /SysNative

		[Registry_local_admin_folders]
		openkey [$keypath$]
		;set "var1" = REG_SZ:"value1"
		deletekey [$keyPath$]
	endfunc
	
	doHKEYAccessTest()
	
	
	sub "%scriptpath%\sub-scripts\registryFunctions\umlauts_in_keys.opsiscript"
	
	include_append "%scriptpath%\sub-scripts\registryFunctions\SecondarySections\registrySections.opsiscript"
	include_append "%scriptpath%\sub-scripts\registryFunctions\SecondarySections\otherSections.opsiscript"

	Set $ExpectedResult$ = "o.k."

	set $TestResult$ = "o.k."
		; 6.3.7 Reading Values from the Windows Registry and Transforming Values into Registry Format
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "RegString"
		set $ConstTest$ = "c:\\windows\\system\\"
		set $CompValue$ = RegString ("c:\windows\system\")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
  		include_insert "%scriptpath%\sub-scripts\registryFunctions\GetRegistry\GetRegistryStringValue.opsiscript"
  		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\GetRegistry\GetRegistryValue.opsiscript"

		include_insert "%scriptpath%\sub-scripts\registryFunctions\create_delete_keys.opsiscript"

		include_insert "%scriptpath%\sub-scripts\registryFunctions\add_supp.opsiscript"
		  	
		if not (FileExists($HomeTestFiles$))
			Files_testFiles
		endif
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "GetMultiSZFromFile"
		Registry_GetMultiSZFromFile
		set $ConstTest$ = "hello;world;how;are;you"
		set $CompValue$ = Trim(GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test2"))
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
  	
  	
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "DeleteVar"
		Registry_DeleteVar
		set $ConstTest$ = ""
		set $CompValue$ = GetRegistryStringValue ("[HKEY_LOCAL_MACHINE\SOFTWARE\opsi.org\opsi-winst-test] test")
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\Write_Read_64Bit_Registry.opsiscript"
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\AllUserDats.opsiscript"  	

		include_insert "%scriptpath%\sub-scripts\registryFunctions\GetRegistry\KeyList_VarList_VarMap.opsiscript"

		include_insert "%scriptpath%\sub-scripts\registryFunctions\keys_with_brackets.opsiscript"		
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\RegKeyExists_RegVarExists.opsiscript"
		
		include_insert "%scriptpath%\sub-scripts\registryFunctions\ACCESS_DENIED.opsiscript"
				
		Registry_opsi_org_delete_test
		Registry_opsi_org_delete_test /64bit
		Files_delete_SaveValueToFile_txt
		
		sub "%scriptpath%\sub-scripts\registryFunctions\deleteListEntries.opsiscript"
	
	else ; windows
		set $TestResult$ = "not implemented"
	endif  ; windows 
	
	sub_compareResult

	set $subregistry$ = $SubResult$
endif
