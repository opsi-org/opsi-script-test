encoding=utf8

if ($Flag_subnetworkcalc$ = "on") or ($MasterFlag$ = "on")
	Message "testing networkcalc functions"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing networkcalc functions"
	comment ""
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	Set $ExpectedResult$ = "o.k."
	; start testing
	set $TestResult$ = "o.k."
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "isValidIP4"
	
	comment "Testing with valid IPv4 address"
	
	set $ConstTest$ = "true"
	set $CompValue$ = booltostring(isValidIP4("255.255.0.0"))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4 passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4 failed"
	endif
	
	comment "Testing with invalid IPv4 address (address range issue)"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isValidIP4("255.256.0.0"))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4 passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4 failed"
	endif
	
	comment "Testing with invalid IPv4 address (format issue)"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isValidIP4("255..0.0"))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4 passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4 failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "getIP4NetworkByAdrAndMask"
	
	comment "Testing with netmask in cidr notation "
	
	set $ConstTest$ = "198.48.0.0"
	set $CompValue$ = getIP4NetworkByAdrAndMask('198.51.100.223', '12')
	if ($ConstTest$ = $CompValue$)
		comment "getIP4NetworkByAdrAndMask passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getIP4NetworkByAdrAndMask failed"
	endif
	
	comment "Testing with netmask in dotted decimal notation "
	
	set $ConstTest$ = "198.48.0.0"
	set $CompValue$ = getIP4NetworkByAdrAndMask('198.51.100.223', '255.240.0.0')
	if ($ConstTest$ = $CompValue$)
		comment "getIP4NetworkByAdrAndMask passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getIP4NetworkByAdrAndMask failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "isValidIP4Network"
	
	comment "Testing with valid network address, where netmask is in cidr notation"
	set $ConstTest$ = "true"
	set $CompValue$ = booltostring(isValidIP4Network('192.168.0.0','24'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Network passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Network failed"
	endif
	
	comment "Testing with valid network address, where netmask is in dotted-decimal notation"
	set $ConstTest$ = "true"
	set $CompValue$ = booltostring(isValidIP4Network('192.168.0.0','255.255.255.0'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Network passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Network failed"
	endif
	
	comment "Testing with invalid network address"
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isValidIP4Network('198.51.100.223','21'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Network passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Network failed"
	endif
	
	comment "Testing with invalid inputs"
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isValidIP4Network('192.200.0.0','41'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Network passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Network failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "isValidIP4Host"
	
	comment "Testing with valid host address, where netmask is in dotted-decimal notation"
	
	set $ConstTest$ = "true"
	set $CompValue$ = booltostring(isValidIP4Host('198.51.104.254', '255.255.248.0'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Host passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Host failed"
	endif
	
	comment "Testing with valid host address, where netmask is in cidr notation"
	
	set $ConstTest$ = "true"
	set $CompValue$ = booltostring(isValidIP4Host('198.51.104.254', '21'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Host passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Host failed"
	endif
	
	comment "Testing with invalid host address"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isValidIP4Host('198.51.104.0', '21'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Host passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Host failed"
	endif
	
	comment "Testing with invalid inputs"
	
	set $ConstTest$ = "false"
	set $CompValue$ = booltostring(isValidIP4Host('198.551.104.21', '255.255.248.0'))
	if ($ConstTest$ = $CompValue$)
		comment "isValidIP4Host passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing isValidIP4Host failed"
	endif
	
	
	comment ""
	comment "-------------------------------------"
	comment "Testing: "
	message "getDefaultNetmaskByIP4adr"
	
	comment "Testing with valid IP"
	
	set $ConstTest$ = "255.255.0.0"
	set $CompValue$ = getDefaultNetmaskByIP4adr("128.42.5.4")
	if ($ConstTest$ = $CompValue$)
		comment "getDefaultNetmaskByIP4adr passed"
	else
		set $TestResult$ = "not o.k."
		LogWarning "testing getDefaultNetmaskByIP4adr failed"
	endif
	
	if CompareDotSeparatedNumbers("%WinstVersion%",">=","4.12.3.4")
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "isPingReachable"
		
		comment "Testing with valid IP"
		if ("%opsiserver%" = "192.168.1.14") or ("%opsiserver%" = "bonifax.uib.local")
			if isPingReachable("192.168.1.14")
				comment "isPingReachable passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing isPingReachable failed"
			endif
			if isPingReachable("bonifax.uib.local")
				comment "isPingReachable passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing isPingReachable failed"
			endif
		endif
		if not("%opsiserver%" = "")
			if isPingReachable("%opsiserver%")
				comment "isPingReachable passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing isPingReachable failed"
			endif
		endif
		if isPingReachable("localhost")
			comment "isPingReachable passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "testing isPingReachable failed"
		endif
		if isPingReachable("127.0.0.1")
			comment "isPingReachable passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "testing isPingReachable failed"
		endif
		switch $OS$
			case "Windows_nt"
				if not (isPingReachable("0.0.0.0"))
					comment "isPingReachable passed"
				else
					set $TestResult$ = "not o.k."
					LogWarning "testing isPingReachable failed"
				endif
			endcase
			case "Linux"
				if isPingReachable("0.0.0.0")
					comment "isPingReachable passed"
				else
					set $TestResult$ = "not o.k."
					LogWarning "testing isPingReachable failed"
				endif
			endcase
			case "macos"
				if isPingReachable("0.0.0.0")
					set $TestResult$ = "not o.k."
					LogWarning "testing isPingReachable failed"
				else
					comment "isPingReachable passed"
				endif
			endcase
		endswitch
		
	endif ; 4.12.3.4
	
	if CompareDotSeparatedNumbers("%WinstVersion%",">=","4.12.4.4")
		
		DefStringList $CorrectFQDNs$
		DefStringList $IncorrectFQDNs$
		
		Set $CorrectFQDNs$ = CreateStringList("www.uib.de", "opsi-script.uib.de", "m.opsi.org", "a-a.b-b.cc", "a1b2.c3d4.e5f6.g7h8.i9j0.zz", "1a-2b.3c_4d.5e-6f.zzz")
		Set $CorrectFQDNs$ = AddToList($CorrectFQDNs$,"123.123.com")
		
		Set $IncorrectFQDNs$ = CreateStringList("abcde", "uib.de", "www.uib", "www.uib.d", "-script.uib.de", "_script.uib.de", "www.uib.00", "a1b2.c3d4.e5f6", "aaa.-bbb.zz", "#aaa.bbb.zz", "a+a.bbb.zz", "a?a.bbb.zz")
		
		DefFunc myFQDNTester($expected$ : string, $fqdn$ : string, ref $TestResult$ : string) : string
			DefVar $CompValue$
			set $CompValue$ = booltostring(isValidFQDN($fqdn$))
			if $CompValue$ = $expected$
				comment "Testing isValidFQDN succeeded"
			else
				set $TestResult$ = "not o.k."
				LogWarning "Testing isValidFQDN failed"
			endif
		endfunc
		
		for %s% in $CorrectFQDNs$ do  set $tmp$ = myFQDNTester("true","%s%",$TestResult$)
		for %s% in $IncorrectFQDNs$ do  set $tmp$ = myFQDNTester("false","%s%",$TestResult$)
	endif
	
	sub_compareResult
	set $winst_networkcalc$ = $SubResult$
	
endif



