encoding=utf8

;if ($Flag_RunAsLoggedOnAdmin$ = "on") or ($MasterFlag$ = "on")
if $Flag_RunAsLoggedOnAdmin$ = "on"
	Message "testing winbatch /RunAsLoggedOnAdmin functions"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing winbatch /RunAsLoggedOnAdmin functions"
	comment "EXPERIMENTAL"
	comment "DO NOT USE THIS FUNCTIONS IN YOUR SCRIPTS"
	comment "THEY MAY CHANGE OR VANISH WITHOUT ANY NOTICE"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	Set $ExpectedResult$ = "o.k."
	set $TestResult$ = "o.k."

	if CompareDotSeparatedNumbers("%OpsiscriptVersion%","4.11.3") >= "0"

		set $tmp$ = "%CurrentAppdataDir%"
		set $tmp$ = "%CurrentStartmenuDir%"
		set $tmp$ = "%CurrentDesktopDir%"
		set $tmp$ = "%CurrentStartupDir%"
		set $tmp$ = "%CurrentProgramsDir%"
		set $tmp$ = "%CurrentSendToDir%"
		comment " create the admin ..."
		LocalAdmin /Create3
		sub_current_path
		message "Winbatch_testing /RunAsLoggedOnAdmin"
		if FileExists("%ScriptPath%\'+$opsi_script_test_helper_bin$+'")
			Winbatch_exitcode_43_noquote_with_param
			set $ConstTest$ = "43"
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing exitcode passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "Winbatch_testing /RunAsLoggedOnAdmin failed"
			endif
		else
			set $TestResult$ = "not o.k."
			LogWarning "Winbatch_testing /RunAsLoggedOnAdmin failed"
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"
		LocalAdmin /Delete

		LocalAdmin /Create3
		sub_current_path
		if FileExists("%ScriptPath%\test-files\testFiles\myinnosetup.exe")
			winbatch_myinno
			if FileExists("%CurrentAppdataDir%\myprog.exe")
				comment "winbatch_myinno passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "winbatch_myinno failed"
			endif
		else
			set $TestResult$ = "not o.k."
			LogWarning "winbatch_myinno failed"
		endif

		if FileExists("%ProgramFiles32Dir%\myinnosetup\unins000.exe")
			winbatch_myinno_uninstall
		endif
		comment " delete the admin ..."
		LocalAdmin /Delete
		sub_current_path

		LocalAdmin /Create3
		sub_current_path
		if FileExists("%ScriptPath%\test-files\testFiles\myinnosetup.exe")
			if FileExists("%CurrentAppdataDir%\myprog.exe")
				comment "delete it"
			endif
			winbatch_wow_myinno
			includelog "c:\opsi.org\log\winbatch_wow_myinno.log" "100"
			if FileExists("%CurrentAppdataDir%\myprog.exe")
				comment "winbatch_myinno passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "winbatch_myinno failed"
			endif
		else
			set $TestResult$ = "not o.k."
			LogWarning "winbatch_myinno failed"
		endif

		if FileExists("%ProgramFiles32Dir%\myinnosetup\unins000.exe")
			winbatch_myinno_uninstall
		endif
		comment " delete the admin ..."
		LocalAdmin /Delete
		sub_current_path


;		message "Winbatch_testing remote msiexec call /RunElevated /TimeoutSeconds 30"
;
;		Winbatch_msi_standard /RunElevated /TimeoutSeconds 30
;		set $ConstTest$ = "0"
;		set $CompValue$ = getLastExitCode
;		if ($ConstTest$ = $CompValue$)
;			comment "Winbatch_testing msiexec call /RunElevated passed"
;		else
;			set $TestResult$ = "not o.k."
;			LogWarning "Winbatch_testing msiexec call /RunElevated failed"
;		endif
;
;		comment "cleanup ..."
;		sleepseconds 5
;		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
;  		comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
;  		Winbatch_msi_uninstall /RunElevated
;  	endif
;
;		message "Winbatch_testing remote msiexec call /RunAsLoggedOnAdmin1 /TimeoutSeconds 30"
;		Winbatch_msi_standard /RunAsLoggedOnAdmin1 /TimeoutSeconds 30
;		comment "Is expected to fail on NT 6"
;		if GetMsVersionInfo >= "6"
;			set $ConstTest$ = getLastExitCode
;		else
;			set $ConstTest$ = "0"
;		endif
;		set $CompValue$ = getLastExitCode
;		if ($ConstTest$ = $CompValue$)
;			comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin1 passed"
;		else
;			set $TestResult$ = "not o.k."
;			LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin1 failed"
;		endif
;
;		comment "cleanup ..."
;		sleepseconds 5
;		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
;  		comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
;  		Winbatch_msi_uninstall
;  	endif
;
;  	if getmsversioninfo < "6"
;  		message "Winbatch_testing remote msiexec call /RunAsLoggedOnAdmin2 /TimeoutSeconds 30"
;  		Winbatch_msi_standard /RunAsLoggedOnAdmin2 /TimeoutSeconds 30
;			set $ConstTest$ = "0"
;			set $CompValue$ = getLastExitCode
;			if ($ConstTest$ = $CompValue$)
;				comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin2 passed"
;			else
;				set $TestResult$ = "not o.k."
;				LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin2 failed"
;			endif
;		endif
;
;		comment "cleanup ..."
;		sleepseconds 5
;		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
;  		comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
;  		Winbatch_msi_uninstall
;  	endif
;
;  	if getmsversioninfo < "6"
;  		message "Winbatch_testing remote msiexec call /RunAsLoggedOnAdmin3 /TimeoutSeconds 30"
;  		Winbatch_msi_standard /RunAsLoggedOnAdmin3 /TimeoutSeconds 30
;			set $ConstTest$ = "0"
;			set $CompValue$ = getLastExitCode
;			if ($ConstTest$ = $CompValue$)
;				comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin3 passed"
;			else
;				set $TestResult$ = "not o.k."
;				LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin3 failed"
;			endif
;		endif
;
;		comment "cleanup ..."
;		sleepseconds 5
;		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
;  		comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
;  		Winbatch_msi_uninstall
;  	endif
;
;  	;message "Winbatch_testing remote msiexec call /RunAsLoggedOnAdmin4 /TimeoutSeconds 30"
;  	;Winbatch_msi_standard /RunAsLoggedOnAdmin4 /TimeoutSeconds 30
;		;set $ConstTest$ = "0"
;		;set $CompValue$ = getLastExitCode
;		;if ($ConstTest$ = $CompValue$)
;		;	comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin4 passed"
;		;else
;		;	set $TestResult$ = "not o.k."
;		;	LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin4 failed"
;		;endif
;
;		comment "cleanup ..."
;		sleepseconds 5
;		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
;  		comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
;  		Winbatch_msi_uninstall
;  	endif


		Files_copy_msi_exe_2_c

		LocalAdmin /Create3
		sub_current_path
		winbatch_myinno_from_c
		if FileExists("%CurrentAppdataDir%\myprog.exe")
			comment "winbatch_myinno passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "winbatch_myinno failed"
		endif
		set $tmp$ = GetRegistryStringValue32("[HKCU\Software\opsi.org\test\test] Path")
		if FileExists("%ProgramFiles32Dir%\myinnosetup\unins000.exe")
			winbatch_myinno_uninstall
		endif
		comment " delete the admin ..."
		LocalAdmin /Delete
		sub_current_path

		LocalAdmin /Create3
		sub_current_path
		winbatch_wow_myinno_from_c
		if FileExists("%CurrentAppdataDir%\myprog.exe")
			comment "winbatch_myinno passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "winbatch_myinno failed"
		endif
		set $tmp$ = GetRegistryStringValue32("[HKCU\Software\opsi.org\test\test] Path")
		if FileExists("%ProgramFiles32Dir%\myinnosetup\unins000.exe")
			winbatch_myinno_uninstall
		endif
		comment " delete the admin ..."
		LocalAdmin /Delete
		sub_current_path

		DefVar $opsiadminuser$
		DefVar $opsiadminpwd$

		Set $opsiadminuser$ = "opsiTestAdmin"
		Set $opsiadminpwd$ = randomstr

		comment "Start setup program"
				DosBatchUserdel
				DosBatchUseradd
				DefStringList $res$
				Set $res$ = getOutStreamFromSection("ExecWithSetup '%ScriptPath%\AutoIt3.exe' WINST")
				if count($res$) = "1"
						DefVar $e$
						Set $e$ = takeString(0, $res$)
						Comment "setup exit code: " + $e$
						if ($e$ = "1614") or ($e$ = "3010")
								ExitWindows /Reboot
						endif
				else
						LogError "Fatal: Setup did not return exit code!"
						IsFatalError
				endif
				DosBatchUserdel


		message "Winbatch_testing local msiexec call /RunElevated /TimeoutSeconds 30"
		Winbatch_msi_standard_from_c /RunElevated /TimeoutSeconds 30
		set $ConstTest$ = "0"
		set $CompValue$ = getLastExitCode
		if ($ConstTest$ = $CompValue$)
			comment "Winbatch_testing msiexec call /RunElevated passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Winbatch_testing msiexec call /RunElevated failed"
		endif

		comment "cleanup ..."
		sleepseconds 5
		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
			comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
			Winbatch_msi_uninstall /RunElevated
		endif

		message "Winbatch_testing local msiexec call /RunAsLoggedOnAdmin1 /TimeoutSeconds 30"
		Winbatch_msi_standard_from_c /RunAsLoggedOnAdmin1 /TimeoutSeconds 30
		comment "Is expected to fail on NT 6"
		;if GetMsVersionInfo INT>= "6"
		if CompareDotSeparatedNumbers(GetMsVersionInfo,"6.0") >= "0"
			set $ConstTest$ = getLastExitCode
		else
			set $ConstTest$ = "0"
		endif
		set $CompValue$ = getLastExitCode
		if ($ConstTest$ = $CompValue$)
			comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin1 passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin1 failed"
		endif

		comment "cleanup ..."
		sleepseconds 5
		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
			comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
			Winbatch_msi_uninstall
		endif

		message "Winbatch_testing local msiexec call /RunAsLoggedOnAdmin2 /TimeoutSeconds 30"
		Winbatch_msi_standard_from_c /RunAsLoggedOnAdmin2 /TimeoutSeconds 30
		set $ConstTest$ = "0"
		set $CompValue$ = getLastExitCode
		if ($ConstTest$ = $CompValue$)
			comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin2 passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin2 failed"
		endif

		comment "cleanup ..."
		sleepseconds 5
		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
			comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
			Winbatch_msi_uninstall
		endif

		message "Winbatch_testing local msiexec call /RunAsLoggedOnAdmin3 /TimeoutSeconds 30"
		Winbatch_msi_standard_from_c /RunAsLoggedOnAdmin3 /TimeoutSeconds 30
		set $ConstTest$ = "0"
		set $CompValue$ = getLastExitCode
		if ($ConstTest$ = $CompValue$)
			comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin3 passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin3 failed"
		endif

		comment "cleanup ..."
		sleepseconds 5
		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
			comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
			Winbatch_msi_uninstall
		endif

		;message "Winbatch_testing local msiexec call /RunAsLoggedOnAdmin4 /TimeoutSeconds 30"
		;Winbatch_msi_standard_from_c /RunAsLoggedOnAdmin4 /TimeoutSeconds 30
		;set $ConstTest$ = "0"
		;set $CompValue$ = getLastExitCode
		;if ($ConstTest$ = $CompValue$)
		;	comment "Winbatch_testing msiexec call /RunAsLoggedOnAdmin4 passed"
		;else
		;	set $TestResult$ = "not o.k."
		;	LogWarning "Winbatch_testing msiexec call /RunAsLoggedOnAdmin4 failed"
		;endif

		comment "cleanup ..."
		sleepseconds 5
		if not (GetRegistryStringValue32("[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{E19B367E-992C-4BD5-86D1-804C10184D71}] DisplayName") = "")
			comment "MSI id {E19B367E-992C-4BD5-86D1-804C10184D71} (dummy.msi) found in registry, starting msiexec to uninstall"
			Winbatch_msi_uninstall
		endif






		;message "Winbatch_testing /WaitForWindowAppearing /RunAsLoggedOnAdmin"
		;marktime
		;Winbatch_startprocess_with_child_nowait /RunAsLoggedOnAdmin /WaitForWindowAppearing "opsi-script-test-helper-win"
		;difftime
		;comment "difftime should be about 2 seconds"
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
		;set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
		;set $CompValue$ = takeString(0, splitStringOnWhitespace($tmp$))
		;set $ConstTest$ = "helperchild.exe"
		;if ($ConstTest$ = $CompValue$)
		;	comment "/WaitForWindowAppearing /RunAsLoggedOnAdmin assumed passed"
		;else
		;	set $TestResult$ = "not o.k."
		;	LogWarning "/WaitForWindowAppearing /RunAsLoggedOnAdmin assumed failed"
		;endif
		;marktime
		;sleepSeconds 3
		;difftime
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
		;set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
		;set $CompValue$ = takeString(0, splitStringOnWhitespace($tmp$))
		;set $ConstTest$ = ""
		;if ($ConstTest$ = $CompValue$)
		;	comment "/WaitForWindowAppearing /RunAsLoggedOnAdmin assumed passed"
		;else
		;	set $TestResult$ = "not o.k."
		;	LogWarning "/WaitForWindowAppearing /RunAsLoggedOnAdmin assumed failed"
		;endif
		;killtask "helperchild.exe"
		;killtask "opsiscripttesthelper.exe"

		message "Winbatch_testing /WaitForProcessEnding /RunAsLoggedOnAdmin"
		Files_copy_helper_2_c

		message "testing winbatch_start_helper_c"
		winbatch_start_helper_c
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_c /RunElevated"
		winbatch_start_helper_c /RunElevated
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asadmin_c"
		winbatch_start_helper_asadmin_c
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asadmin_c /RunElevated"
		winbatch_start_helper_asadmin_c /RunElevated
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing DosInAnIcon_start_helper_c"
		DosInAnIcon_start_helper_c
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing DosInAnIcon_start_helper_asadmin_c"
		DosInAnIcon_start_helper_asadmin_c
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c"
		winbatch_start_helper_asinvoker_c
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c /RunElevated"
		winbatch_start_helper_asinvoker_c /RunElevated
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin1 /TimeoutSeconds 10"
		winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin1 /TimeoutSeconds 10
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin2 /TimeoutSeconds 10"
		winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin2 /TimeoutSeconds 10
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin3 /TimeoutSeconds 10"
		winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin3 /TimeoutSeconds 10
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c LocalAdmin /Create3 /TimeoutSeconds 10"
		LocalAdmin /Create3
		winbatch_start_helper_asinvoker_c /TimeoutSeconds 10
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		LocalAdmin /Delete
		;message "testing winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin4 /TimeoutSeconds 10"
		;winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin4 /TimeoutSeconds 10
		;set $list1$ = loadTextFile ("c:\tmp\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing DosInAnIcon_start_helper_asinvoker_c"
		DosInAnIcon_start_helper_asinvoker_c
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")
		message "testing winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin3 /RunElevated /TimeoutSeconds 10"
		winbatch_start_helper_asinvoker_c /RunAsLoggedOnAdmin3 /RunElevated /TimeoutSeconds 10
		set $list1$ = loadTextFile ($HomeTestFiles$+"\testFiles\opsi-script-test-helper-win\admin.log")

		marktime
		message "testing Winbatch_startprocess_with_child_nowait_from_c /RunElevated /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		Winbatch_startprocess_with_child_nowait_from_c /RunElevated /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		difftime
		comment "difftime should be 5 seconds"
		set $tmp$ = getDiffTimeSec
		if $tmp$ INT>= "10"
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunElevated assumed failed"
		else
			sleepseconds 1
			;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
			set $list1$ = getprocesslist
			set $ConstTest$ = ""
			set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
			set $CompValue$ = takeString(0, splitString($tmp$,";"))
			if ($ConstTest$ = $CompValue$)
				comment "/WaitForProcessEnding /RunElevated assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "/WaitForProcessEnding /RunElevated assumed failed"
			endif
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		marktime
		message "testing Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin1 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin1 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		difftime
		comment "difftime should be 5 seconds"
		set $tmp$ = getDiffTimeSec
		if $tmp$ INT>= "10"
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		else
			sleepseconds 1
			;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
			set $list1$ = getprocesslist
			set $ConstTest$ = ""
			set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
			set $CompValue$ = takeString(0, splitString($tmp$,";"))
			if ($ConstTest$ = $CompValue$)
				comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
			endif
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		marktime
		message "testing Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin2 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin2 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		difftime
		comment "difftime should be 5 seconds"
		set $tmp$ = getDiffTimeSec
		if $tmp$ INT>= "10"
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		else
			sleepseconds 1
			;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
			set $list1$ = getprocesslist
			set $ConstTest$ = ""
			set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
			set $CompValue$ = takeString(0, splitString($tmp$,";"))
			if ($ConstTest$ = $CompValue$)
				comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
			endif
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		marktime
		message "testing Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin3 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin3 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		difftime
		comment "difftime should be 5 seconds"
		set $tmp$ = getDiffTimeSec
		if $tmp$ INT>= "10"
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		else
			sleepseconds 1
			;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
			set $list1$ = getprocesslist
			set $ConstTest$ = ""
			set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
			set $CompValue$ = takeString(0, splitString($tmp$,";"))
			if ($ConstTest$ = $CompValue$)
				comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
			endif
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		;marktime
		;message "testing Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin4 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		;Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin4 /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		;difftime
		;comment "difftime should be 5 seconds"
		;set $tmp$ = getDiffTimeSec
		;if $tmp$ INT>= "10"
		;	set $TestResult$ = "not o.k."
		;	LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		;else
		;	sleepseconds 1
		;	;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
		;	set $list1$ = getprocesslist
		;	set $ConstTest$ = ""
		;	set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
		;	set $CompValue$ = takeString(0, splitString($tmp$,";"))
		;	if ($ConstTest$ = $CompValue$)
		;		comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
		;	else
		;		set $TestResult$ = "not o.k."
		;		LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		;	endif
		;endif
		;killtask "helperchild.exe"
		;killtask "opsiscripttesthelper.exe"

		marktime
		message "testing Winbatch_startprocess_with_child_nowait_from_c /RunAsInvoker /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		Winbatch_startprocess_with_child_nowait_from_c /RunAsInvoker /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		difftime
		comment "difftime should be 5 seconds"
		set $tmp$ = getDiffTimeSec
		if $tmp$ INT>= "10"
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		else
			sleepseconds 1
			;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
			set $list1$ = getprocesslist
			set $ConstTest$ = ""
			set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
			set $CompValue$ = takeString(0, splitString($tmp$,";"))
			if ($ConstTest$ = $CompValue$)
				comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
			endif
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		marktime
		message "testing Winbatch_startprocess_with_child_nowait /RunAsInvoker /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10"
		Winbatch_startprocess_with_child_nowait /RunAsInvoker /WaitForProcessEnding "helperchild.exe" /TimeoutSeconds 10
		difftime
		comment "difftime should be 5 seconds"
		set $tmp$ = getDiffTimeSec
		if $tmp$ INT>= "10"
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		else
			sleepseconds 1
			;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
			set $list1$ = getprocesslist
			set $ConstTest$ = ""
			set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
			set $CompValue$ = takeString(0, splitString($tmp$,";"))
			if ($ConstTest$ = $CompValue$)
				comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
			endif
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"


		comment "same test without /WaitForProcessEnding"
		message "testing Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin"
		Winbatch_startprocess_with_child_nowait_from_c /RunAsLoggedOnAdmin
		sleepseconds 1
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
		set $list1$ = getprocesslist
		set $ConstTest$ = "helperchild.exe"
		set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
		set $CompValue$ = takeString(0, splitString($tmp$,";"))
		if ($ConstTest$ = $CompValue$)
			comment "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "/WaitForProcessEnding /RunAsLoggedOnAdmin assumed failed"
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"


		;/WaitForWindowVanish sees only Windows of 32 Bit applications
		;message "Winbatch_testing /WaitForWindowVanish /RunAsLoggedOnAdmin"
		;marktime
		;Winbatch_startprocess_with_child_nowait /RunAsLoggedOnAdmin /WaitForWindowVanish "opsi-script-test-helper-win"
		;difftime
		;comment "difftime should be 5 seconds"
		;sleepseconds 1
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helperchild')
		;set $tmp$ = takeFirstStringContaining($list1$,"helperchild.exe")
		;set $CompValue$ = takeString(0, splitStringOnWhitespace($tmp$))
		;set $ConstTest$ = ""
		;if ($ConstTest$ = $CompValue$)
		;	comment "/WaitForWindowVanish /RunAsLoggedOnAdmin assumed passed"
		;else
		;	set $TestResult$ = "not o.k."
		;	LogWarning "/WaitForWindowVanish /RunAsLoggedOnAdmin assumed failed"
		;endif

		message "Winbatch_testing /WaitSeconds /RunAsLoggedOnAdmin"
		comment "should be take 2 seconds even the program is finished before 2 seconds"
		marktime
		message "testing Winbatch_exitcode_43_doublequote_with_param /RunAsLoggedOnAdmin /WaitSeconds 2"
		Winbatch_exitcode_43_doublequote_with_param /RunAsLoggedOnAdmin /WaitSeconds 2
		difftime
		sleepseconds 1
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helper')
		set $list1$ = getprocesslist
		set $tmp$ = takeFirstStringContaining($list1$,"opsiscripttesthelper.exe")
		set $CompValue$ = takeString(0, splitString($tmp$,";"))
		set $ConstTest$ = ""
		if ($ConstTest$ = $CompValue$)
			comment "/WaitSeconds /RunAsLoggedOnAdmin assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "/WaitSeconds /RunAsLoggedOnAdmin assumed failed"
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"


		comment "should be take longer than 2 seconds"
		marktime
		message "testing Winbatch_helper_wait2_showwindow1 /RunAsLoggedOnAdmin /WaitSeconds 2"
		Winbatch_helper_wait2_showwindow1 /RunAsLoggedOnAdmin /WaitSeconds 2
		difftime
		sleepseconds 1
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helper')
		set $list1$ = getprocesslist
		set $tmp$ = takeFirstStringContaining($list1$,"opsiscripttesthelper.exe")
		set $CompValue$ = takeString(0, splitString($tmp$,";"))
		set $ConstTest$ = ""
		if ($ConstTest$ = $CompValue$)
			comment "/WaitSeconds /RunAsLoggedOnAdmin assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "/WaitSeconds /RunAsLoggedOnAdmin assumed failed"
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		comment "should be take exactly 2 seconds even if the program takes longer"
		marktime
		message "testing Winbatch_helper_wait2_showwindow5 /RunAsLoggedOnAdmin /WaitSeconds 2 /LetThemgo"
		Winbatch_helper_wait2_showwindow5 /RunAsLoggedOnAdmin /WaitSeconds 2 /LetThemgo
		difftime
		sleepseconds 1
		;set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helper')
		set $list1$ = getprocesslist
		set $tmp$ = takeFirstStringContaining($list1$,"opsiscripttesthelper.exe")
		set $CompValue$ = takeString(0, splitString($tmp$,";"))
		set $ConstTest$ = "opsiscripttesthelper.exe"
		if ($ConstTest$ = $CompValue$)
			comment "/WaitSeconds /RunAsLoggedOnAdmin assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "/WaitSeconds /RunAsLoggedOnAdmin assumed failed"
		endif
		killtask "helperchild.exe"
		killtask "opsiscripttesthelper.exe"

		Files_clean_from_c

		;if GetMSVersionInfo INT>= "6"
		if CompareDotSeparatedNumbers(GetMsVersionInfo,"6.0") >= "0"
			message "testing Winbatch_powercfg_hibernate_off /RunElevated"
			Winbatch_powercfg_hibernate_off /RunElevated
			set $ConstTest$ = "0"
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing /RunElevated passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing /RunElevated failed"
			endif

			message "testing Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin1"
			Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin1
			comment "Is expected to fail on NT 6"
			;if GetMsVersionInfo INT>= "6"
			if CompareDotSeparatedNumbers(GetMsVersionInfo,"6.0") >= "0"
				set $ConstTest$ = "1"
			else
				set $ConstTest$ = "0"
			endif
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing /RunAsLoggedOnAdmin1 passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing /RunAsLoggedOnAdmin1 failed"
			endif

			message "testing Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin2"
			Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin2
			set $ConstTest$ = "0"
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing /RunAsLoggedOnAdmin2 passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing /RunAsLoggedOnAdmin2 failed"
			endif

			message "testing Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin3"
			Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin3
			set $ConstTest$ = "0"
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing /RunAsLoggedOnAdmin3 passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing /RunAsLoggedOnAdmin3 failed"
			endif

			;message "testing Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin4"
			;Winbatch_powercfg_hibernate_off /RunAsLoggedOnAdmin4
			;set $ConstTest$ = "0"
			;set $CompValue$ = getLastExitCode
			;if ($ConstTest$ = $CompValue$)
			;	comment "Winbatch_testing /RunAsLoggedOnAdmin4 passed"
			;else
			;	set $TestResult$ = "not o.k."
			;	LogWarning "testing /RunAsLoggedOnAdmin4 failed"
			;endif

			message "testing DosInAnIcon_powercfg_hibernate_off"
			DosInAnIcon_powercfg_hibernate_off
			comment "Is expected to fail on NT 6"
			;if GetMsVersionInfo INT>= "6"
			if CompareDotSeparatedNumbers(GetMsVersionInfo,"6.0") >= "0"
				set $ConstTest$ = "1"
			else
				set $ConstTest$ = "0"
			endif
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing  failed"
			endif

			message "testing LocalAdmin /Create1 DosInAnIcon_powercfg_hibernate_off"
			LocalAdmin /Create1
			DosInAnIcon_powercfg_hibernate_off
			LocalAdmin /Delete
			comment "Is expected to fail on NT 6"
			;if GetMsVersionInfo INT>= "6"
			if CompareDotSeparatedNumbers(GetMsVersionInfo,"6.0") >= "0"
				set $ConstTest$ = "1"
			else
				set $ConstTest$ = "0"
			endif
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing /Create1 passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing /Create1 failed"
			endif

			message "testing LocalAdmin /Create2 DosInAnIcon_powercfg_hibernate_off"
			LocalAdmin /Create2
			DosInAnIcon_powercfg_hibernate_off
			LocalAdmin /Delete
			comment "Is expected to fail on NT 6"
			;if GetMsVersionInfo INT>= "6"
			if CompareDotSeparatedNumbers(GetMsVersionInfo,"6.0") >= "0"
				set $ConstTest$ = "1"
			else
				set $ConstTest$ = "0"
			endif
			set $CompValue$ = getLastExitCode
			if ($ConstTest$ = $CompValue$)
				comment "Winbatch_testing /Create2 passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "testing /Create2 failed"
			endif

			; will not work at all:
			;LocalAdmin /Create3
			;DosInAnIcon_powercfg_hibernate_off
			;LocalAdmin /Delete
			;
			; will not work at all:
			;LocalAdmin /Create4
			;DosInAnIcon_powercfg_hibernate_off
			;LocalAdmin /Delete

			Registry_hack_forbidden_key
			winbatch_hack_forbidden_key1
			winbatch_hack_forbidden_key2
			LocalAdmin /Create3
			Registry_hack_forbidden_key
			winbatch_hack_forbidden_key1
			winbatch_hack_forbidden_key2
			sub_current_path
			LocalAdmin /Delete
		endif
	endif

	sub_compareResult
	set $winst_RunAsLoggedOnAdmin$ = $SubResult$
endif


;----------------   start   sections for dosbatch/winbatch tests ---------------------------------
[Files_empty_folder]
Delete -s -f $HomeTestFiles$

[WinBatch_testing]
$ping5command$

[Winbatch_top]
/bin/bash -c "ping 127.0.0.1 &"

[DosInAnIcon_getTask_ping]
@echo off
tasklist /FI "IMAGENAME eq ping.exe"

[DosInAnIcon_getTask_helper]
@echo off
tasklist /FI "IMAGENAME eq opsiscripttesthelper.exe"

[DosInAnIcon_getTask_helperchild]
@echo off
tasklist /FI "IMAGENAME eq helperchild.exe"

[DosInAnIcon_getTask_string2]
@echo off
tasklist /FI "IMAGENAME eq $string2$"

[Winbatch_startprocess_with_child_nowait]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$" --fork-and-stop=2

[Winbatch_startprocess_with_child_nowait_from_c]
"$HomeTestFiles$\testFiles\$opsi_script_test_helper_bin$" --fork-and-stop=2


[WinBatch_testing2]
%ScriptPath%\dos\dummy2.bat

[Winbatch_exitcode_42_noquote]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$"

[Winbatch_exitcode_42_singlequote]
'%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$'

[Winbatch_exitcode_42_doublequote]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$"

[Winbatch_exitcode_43_noquote_with_param]
%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$ --exit-code=43


[Winbatch_exitcode_43_singlequote_with_param]
'%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$' --exit-code=43

[Winbatch_exitcode_43_doublequote_with_param]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$" --exit-code=43

[Winbatch_helper_wait2_showwindow1]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$" --wait=2 --showwindow=1

[Winbatch_helper_wait2_showwindow5]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$" --wait=2 --showwindow=5

[Winbatch_helper_showwindow1]
"%ScriptPath%$pathDelim$$opsi_script_test_helper_bin$" --fork-and-stop=3

[Winbatch_msi_shellexecute]
"%ScriptPath%\test-files\testFiles\dummy.msi" /l* "$HomeTestFiles$\dummy.install_log.txt" /qb! ALLUSERS=2 REBOOT=ReallySuppress

[Winbatch_msi_standard]
msiexec /i "%ScriptPath%\test-files\testFiles\dummy.msi" /l* "$HomeTestFiles$\dummy.install_log.txt" /qb! ALLUSERS=2 REBOOT=ReallySuppress

[Winbatch_msi_standard_from_c]
msiexec /i "$HomeTestFiles$\testFiles\dummy.msi" /l* "$HomeTestFiles$\dummy.install_log.txt" /qb! ALLUSERS=2 REBOOT=ReallySuppress

[winbatch_myinno]
"%ScriptPath%\test-files\testFiles\myinnosetup.exe" /silent

[winbatch_myinno_from_c]
"$HomeTestFiles$\testFiles\myinnosetup.exe" /silent

[winbatch_myinno_uninstall]
"%ProgramFiles32Dir%\myinnosetup\unins000.exe" /silent

[winbatch_wow_myinno]
"%OpsiscriptDir%\opsi-script.exe" "%scriptpath%\standalone-tests\myinno_winbatch.ins" /logfile "c:\opsi.org\log\winbatch_wow_myinno.log" /batch

[Winbatch_regedit_s_64]
"%systemroot%\regedit.exe" /s "%scriptpath%\test-files\64bit.reg"

[Winbatch_regedit_s_32]
"%system%\regedit.exe" /s "%scriptpath%\test-files\64bit.reg"

[winbatch_wow_myinno_from_c]
"%OpsiscriptDir%\opsi-script.exe" "%scriptpath%\myinno_from_c_winbatch.ins" /logfile "c:\opsi.org\log\winbatch_wow_myinno.log" /batch

[Winbatch_msi_standard_from_c_indirect]
;"%OpsiscriptDir%\..\action_processor_starter.exe" <hostId> <hostKey> <controlServerPort> <logFile> <logLevel> <depotRemoteUrl> <depotDrive> <depotServerUsername> <depotServerPassword> <sessionId> <actionProcessorDesktop> <actionProcessorCommand> <actionProcessorTimeout> <runAsUser> <runAsPassword> <createEnvironment>
;"%OpsiscriptDir%\..\action_processor_starter.exe" "%HostID%" <hostKey> "4441"  "8" <depotRemoteUrl> "%ScriptDrive%" <depotServerUsername> <depotServerPassword> 0 "defaukt" "msiexec /i c:\tmp\testFiles\dummy.msi /l* c:\tmp\dummy.install_log.txt /qb! ALLUSERS=2 REBOOT=ReallySuppress" 30 "" "" false

[winbatch_start_helper_asadmin_c]
"$HomeTestFiles$\testFiles\$opsi_script_test_helper_bin$" --log="$HomeTestFiles$\testFiles\opsi-script-test-helper-win\admin.log"

[winbatch_start_helper_asinvoker_c]
"$HomeTestFiles$\testFiles\$opsi_script_test_helper_bin$" --log="$HomeTestFiles$\testFiles\opsi-script-test-helper-win\admin.log"

[winbatch_start_helper_c]
"$HomeTestFiles$\testFiles\$opsi_script_test_helper_bin$" --log="$HomeTestFiles$\testFiles\opsi-script-test-helper-win\admin.log"

;[DosInAnIcon_start_helper_c]
;"$HomeTestFiles$\testFiles\$opsi_script_test_helper_bin$" --log="$HomeTestFiles$\testFiles\opsi-script-test-helper-win\admin.log"
;
;[DosInAnIcon_start_helper_asadmin_c]
;"$HomeTestFiles$\testFiles\opsi-script-test-helper-win\opsiwinsttesthelperasadmin.exe" --log="$HomeTestFiles$\testFiles\opsi-script-test-helper-win\admin.log"
;
;[DosInAnIcon_start_helper_asinvoker_c]
;"$HomeTestFiles$\testFiles\opsi-script-test-helper-win\opsiwinsttesthelperasinvoker.exe" --log="$HomeTestFiles$\testFiles\opsi-script-test-helper-win\admin.log"
;
[Files_copy_msi_exe_2_c]
copy "%ScriptPath%\test-files\testFiles\*.msi" "$HomeTestFiles$\testFiles"
copy "%ScriptPath%\test-files\testFiles\*.exe" "$HomeTestFiles$\testFiles"

[Files_copy_helper_2_c]
copy "%ScriptPath%\opsi-script-test-helper-win\*.exe" "$HomeTestFiles$\testFiles\opsi-script-test-helper-win"

[Files_clean_from_c]
del -s -f "$HomeTestFiles$\testFiles"


[Winbatch_msi_uninstall]
msiexec /x {E19B367E-992C-4BD5-86D1-804C10184D71} /qb! REBOOT=ReallySuppress

[Winbatch_powercfg_hibernate_off]
powercfg /hibernate off

;[DosInAnIcon_powercfg_hibernate_off]
;powercfg /hibernate off
;echo %ERRORLEVEL%
;exit %ERRORLEVEL%
;
;[DosBatch_1]
;c:
;mkdir $HomeTestFiles$
;cd $HomeTestFiles$
;echo dummy > dosbatch_1.txt
;
;[DosInAnIcon_1]
;c:
;mkdir $HomeTestFiles$
;cd $HomeTestFiles$
;echo dummy > dosinanicon_1.txt
;
;[DosBatch_1b]
;c:
;mkdir $HomeTestFiles$
;cd $HomeTestFiles$
;echo dummy > dosinanicon_1.txt
;
;[Execwith_1b]
;c:
;mkdir $HomeTestFiles$
;cd $HomeTestFiles$
;echo dummy > dosinanicon_1.txt
;
;[DosInAnIcon_remove_test_from_system32]
;%SystemDrive%
;cd "%System%"
;del "dummy.txt"
;
;[DosInAnIcon_kill_notepad]
;taskkill /F /IM notepad.exe
;
;[DosInAnIcon_exit42]
;set exitcode=42
;exit %exitcode%
;
;[DosInAnIcon_exit1]
;rem create an errolevel= 1
;VERIFY OTHER 2> NUL
;echo %ERRORLEVEL%
;exit %ERRORLEVEL%
;
;[ShellInAnIcon_exitcode42]
;set exitcode=0
;VERIFY OTHER 2> NUL
;if %ERRORLEVEL% NEQ 0 set exitcode=%ERRORLEVEL%
;echo %exitcode%
;"%ScriptPath%\$opsi_script_test_helper_bin$"
;if %ERRORLEVEL% NEQ 0 set exitcode=%ERRORLEVEL%
;exit %exitcode%
;
;
;[DosBatchUseradd]
;net user "$opsiadminuser$" "$opsiadminpwd$" /add
;net localgroup Administratoren /add "$opsiadminuser$"
;
;[DosBatchUserdel]
;net user "$opsiadminuser$" /delete
;rmdir /s /q "%ProfileDir%\$opsiadminuser$"
;
;[ExecWithSetup]
;; http://msdn.microsoft.com/library/ee942965%28v=VS.100%29.aspx
;; return exit code via stdout as winst cannot read exit codes from ExecWith
;$ExitCode = RunAsWait("$opsiadminuser$", @ComputerName, "$opsiadminpwd$", 1,  '"$HomeTestFiles$\testFiles\myinnosetup.exe" /silent')
;if not @error then
;	ConsoleWrite($exitcode)
;endif
;
;;;;;;;;;;;;;;;;;;;;;
;
;[ShellInAnIcon_exit43]
;set -x
;exit 43
;
;
;[ShellBatch_ping]
;set -x
;ping -c 4 localhost
;
;[ShellBatch_1]
;set -x
;mkdir -p $HomeTestFiles$
;cd $HomeTestFiles$
;echo dummy > shellbatch_1.txt
;
;[ShellInAnIcon_1]
;set -x
;mkdir -p $HomeTestFiles$
;cd $HomeTestFiles$
;echo dummy > shellinanicon_1.txt
;
;[DosInAnIcon_with_parameter]
;echo Hello %1%
;
;[ShellInAnIcon_with_parameter]
;echo Hello $1

;----------------   stop   sections for dosbatch/winbatch tests ---------------------------------
