
	include_append "%scriptpath%\sub-scripts\execWithFunctions\SecondarySections\secondarySections.opsiscript"

	Message "testing execWith "
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing execWith "
	comment ""
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	Set $ExpectedResult$ = "o.k."
	set $TestResult$ = "o.k."
	set $TestName$ = "execwith"
	
	if $OS$ = "Windows_NT"
		;stop all running instances beforehand
		killtask "autoit3.exe"
		
		;if $MsVersion$ <= "5.0"
		if CompareDotSeparatedNumbers(GetMsVersionInfo,"5.0") <= "0"
			comment "not tested at win2k  because tasklist is needed"
		else
			comment "start an autoit3 instance which will wait for a notepad to come"
			ExecWith_close_helper_window "%SCRIPTPATH%\autoit3.exe" WINST /letThemGo /EscapeStrings
			winbatch_helper_showwindow_50
			sleepseconds 1
			set $list1$ = getOutStreamFromSection ('DosInAnIcon_getTask_helper')
			set $tmp$ = takeFirstStringContaining($list1$,"opsiscripttesthelper.exe")
			set $CompValue$ = takeString(0, splitStringOnWhitespace($tmp$))
			set $ConstTest$ = ""
			if ($ConstTest$ = $CompValue$)
				comment "Execwith assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "Execwith assumed failed"
			endif
			killtask "helperchild.exe"
			killtask "opsiscripttesthelper.exe"
			killtask "autoit3.exe"
		endif
		
		set $list1$ = getOutStreamFromSection ('ExecWith_parameters cmd.exe /c pass p1 p2 p3 p4 p5')
		set $CompValue$ = takeFirstStringContaining($list1$,"p5")
		set $ConstTest$ = "param5= p5"
		if ($ConstTest$ = $CompValue$)
			comment "Execwith assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Execwith assumed failed"
		endif
		
		set $list1$ = getOutStreamFromSection ('ExecWith_parameters cmd.exe /c echo hello! hello pass')
		set $CompValue$ = takeFirstStringContaining($list1$,"hello")
		if not ("" = $CompValue$)
			comment "Execwith assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Execwith assumed failed"
		endif
		
		DefVar $UserName$
		Set $UserName$ = "secours"
		DefVar $UserPassWord$
		Set $UserPassWord$ = "help!"
		DefVar $UserGroup$
		Set $UserGroup$ = "Utilisateurs"
		set $list1$ = getOutStreamFromSection ('Execwith_Autoit_param2 "%ScriptPath%\autoit3.exe" PASS $UserPassWord$ $UserName$ $UserGroup$')
		killtask "autoit3.exe"
		
		
		
		if CompareDotSeparatedNumbers("%OpsiscriptVersion%","4.11.5.1") >= "0"
			comment "Testing parameters for ExecWith"
			set $tmp$ = "p5"
			set $list1$ = getOutStreamFromSection ('ExecWith_parameters cmd.exe /c pass p1 p2 p3 p4 $tmp$')
			set $CompValue$ = takeFirstStringContaining($list1$,"p5")
			set $ConstTest$ = "param5= p5"
			if ($ConstTest$ = $CompValue$)
				comment "Execwith assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "Execwith assumed failed"
			endif
		endif ; 4.11.5
		
		if CompareDotSeparatedNumbers("%OpsiscriptVersion%",">=","4.12.4.17")
			comment "Testing /encoding parameter for ExecWith"
			set $tmp$ = "p5"
			set $list1$ = getOutStreamFromSection ('ExecWith_parameters cmd.exe /c pass p1 p2 p3 p4 $tmp$ WINST /encoding utf8')
			set $CompValue$ = takeFirstStringContaining($list1$,"p5")
			set $ConstTest$ = "param5= p5"
			if ($ConstTest$ = $CompValue$)
				comment "Execwith with /encoding assumed passed"
			else
				set $TestResult$ = "not o.k."
				LogWarning "Execwith with /encoding assumed failed"
			endif
		endif ; 4.12.4.17
		
	endif ; windows
	
	if $OS$ = "Linux"
		set $list1$ = getOutStreamFromSection ('ExecWith_parameters_bash /bin/bash pass p1 p2 p3 p4 p5')
		set $CompValue$ = takeFirstStringContaining($list1$,"p5")
		set $ConstTest$ = "param5= p5"
		if ($ConstTest$ = $CompValue$)
			comment "Execwith assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Execwith assumed failed"
		endif
		
		comment "Testing /encoding parameter for ExecWith"
		set $list1$ = getOutStreamFromSection ('ExecWith_parameters_bash /bin/bash pass p1 p2 p3 p4 p5 WINST /encoding utf8')
		set $CompValue$ = takeFirstStringContaining($list1$,"p5")
		set $ConstTest$ = "param5= p5"
		if ($ConstTest$ = $CompValue$)
			comment "Execwith with /encoding assumed passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "Execwith with /encoding assumed failed"
		endif
		
	endif ; Linux
	
	sub_compareResult
	set $execwith_test$ = $SubResult$