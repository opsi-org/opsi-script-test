	
	include_append "%scriptpath%\sub-scripts\xmlFunctions\SecondarySections\secondarySections.opsiscript"

	Message "testing XMLPatch functions"
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	comment ""
	comment "testing XMLPatch functions"
	comment ""
	comment ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
	Set $ExpectedResult$ = "o.k."
	
	; start testing
	set $TestResult$ = "o.k."
	if $OS$ = "windows_NT"
		Files_copy_xml
		
		;return
		
		; 6.7.3 Boolean Expressions
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "XMLAddNamespace"
		if not(XMLAddNamespace($HomeTestFiles$+"\dummy.xml", 'rootnode', 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'))
			comment "XMLAddNamespace returned false"
		endif
		set $ConstTest$ = '<rootnode xmlns:xml="http://www.w3.org/XML/1998/namespace">'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $CompValue$ = takeString(1, $list1$)
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "XMLRemoveNamespace"
		if not(XMLRemoveNamespace($HomeTestFiles$+"\dummy.xml", 'rootnode', 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'))
			comment "XMLRemoveNamespace returned false"
		endif
		set $ConstTest$ = '<rootnode>'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $CompValue$ = takeString(1, $list1$)
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		; 6.4.5 Producing String Lists from wInst Sections
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "return"
		set $list1$ = getReturnListFromSection ('XMLPatch_return_elements "'+$HomeTestFiles$+'\dummy.xml"')
		set $ConstTest$ = 'node_level-2_A color="blue"'
		set $tmp$ = takeString(0, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "XMLPatch_return_elements passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "XMLPatch_return_elements failed"
		endif
		
		set $list1$ = getReturnListFromSection ('XMLPatch_return_attributes "'+$HomeTestFiles$+'\dummy.xml"')
		set $ConstTest$ = 'color="green"'
		set $ConstTest2$ = 'count="65"'
		set $tmp$ = takeString(0, $list1$)
		set $CompValue$ = Trim($tmp$)
		set $tmp$ = takeString(1, $list1$)
		set $CompValue2$ = Trim($tmp$)
		if (($ConstTest$ = $CompValue$) AND ($ConstTest2$ = $CompValue2$))
			comment "XMLPatch_return_attributes passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "XMLPatch_return_attributes failed"
		endif
		
		set $list1$ = getReturnListFromSection ('XMLPatch_return_elementnames "'+$HomeTestFiles$+'\dummy.xml"')
		set $ConstTest$ = "node_level-2_A"
		set $tmp$ = takeString(0, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "XMLPatch_return_elementnames passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "XMLPatch_return_elementnames failed"
		endif
		
		set $list1$ = getReturnListFromSection ('XMLPatch_return_attributenames "'+$HomeTestFiles$+'\dummy.xml"')
		set $ConstTest$ = "color"
		set $ConstTest2$ = "count"
		set $tmp$ = takeString(0, $list1$)
		set $CompValue$ = Trim($tmp$)
		set $tmp$ = takeString(1, $list1$)
		set $CompValue2$ = Trim($tmp$)
		if (($ConstTest$ = $CompValue$) AND ($ConstTest2$ = $CompValue2$))
			comment "XMLPatch_return_attributenames passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "XMLPatch_return_attributenames failed"
		endif
		
		set $list1$ = getReturnListFromSection ('XMLPatch_return_text "'+$HomeTestFiles$+'\dummy.xml"')
		set $ConstTest$ = "Hello World"
		set $tmp$ = takeString(0, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "XMLPatch_return_text passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "XMLPatch_return_text failed"
		endif
		
		set $list1$ = getReturnListFromSection ('XMLPatch_return_counting "'+$HomeTestFiles$+'\dummy.xml"')
		set $ConstTest$ = "1"
		set $ConstTest2$ = "2"
		set $tmp$ = takeString(0, $list1$)
		set $CompValue$ = Trim($tmp$)
		set $tmp$ = takeString(1, $list1$)
		set $CompValue2$ = Trim($tmp$)
		if (($ConstTest$ = $CompValue$) AND ($ConstTest2$ = $CompValue2$))
			comment "XMLPatch_return_counting passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "XMLPatch_return_counting failed"
		endif
		
		; 7.7 XMLPatch Sections
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "SetAttribute"
		XMLPatch_SetAttribute $HomeTestFiles$+"\dummy.xml"
		set $ConstTest$ = "yellow"
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $tmp$ = takeString(4, $list1$)
		set $CompValue$ = takeString(1, splitString ($tmp$, '"'))
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "AddAttribute"
		XMLPatch_AddAttribute $HomeTestFiles$+"\dummy.xml"
		set $ConstTest$ = "OpenOfficeWriter"
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $tmp$ = takeString(3, $list1$)
		set $CompValue$ = takeString(3, splitString ($tmp$, '"'))
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "DeleteAttribute"
		XMLPatch_DeleteAttribute $HomeTestFiles$+"\dummy.xml"
		set $ConstTest$ = '<node_level-2_B count="65">'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $tmp$ = takeString(4, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "DeleteElement"
		XMLPatch_DeleteElement $HomeTestFiles$+"\dummy.xml"
		set $ConstTest$ = '<node_level-2_C>'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $tmp$ = takeString(4, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "failed"
		endif
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "SetText / AddText"
		XMLPatch_SetText $HomeTestFiles$+"\dummy.xml"
		set $ConstTest$ = '<node_level-2_A color="blue" name="OpenOfficeWriter">node_level-2_A</node_level-2_A>'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $tmp$ = takeString(3, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "SetText passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "SetText failed"
		endif
		XMLPatch_AddText $HomeTestFiles$+"\dummy.xml"
		set $ConstTest$ = '<node_level-2_C>node_level-2_C</node_level-2_C>'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy.xml")
		set $tmp$ = takeString(4, $list1$)
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "AddText passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "AddText failed"
		endif
		
		XMLPatch_SetText_dummy2 $HomeTestFiles$+"\dummy2.xml"
		set $ConstTest$ = '<VALUE>K1S120</VALUE>'
		set $list1$ = loadTextFile($HomeTestFiles$+"\dummy2.xml")
		set $tmp$ = takeFirstStringContaining($list1$,"<VALUE>K1S120</VALUE>")
		set $CompValue$ = Trim($tmp$)
		if ($ConstTest$ = $CompValue$)
			comment "SetText passed"
		else
			set $TestResult$ = "not o.k."
			LogWarning "SetText failed"
		endif
		
		
		comment ""
		comment "-------------------------------------"
		comment "Testing: "
		message "OpenNodeSet"
		if ($TestResult$ = "o.k.")
			comment "not explicit tested | assumed passed"
		else
			comment "status is unknown"
		endif
	else ; windows
		set $TestResult$ = "not implemented"
	endif ; windows
	
	sub_compareResult
	
	set $winst_xml$ = $SubResult$